'\" t
.\" @(#)apt.1 1.10 04/06/13 SMI;
.\" Copyright 2004 Sun Microsystems, Inc. All rights reserved.
.\" Copyright 2004 Sun Microsystems, Inc. Tous droits réservés.
.\" 
.TH apt 1 "13 June 2004"
.SH NAME
apt \- annotation processing tool 
.\"
.SH SYNOPSIS
.B apt 
[
.BI \-classpath " classpath"
]
[
.BI \-sourcepath " sourcepath"
]
[
.BI \-d " directory"
]
[
.BI \-s " directory"
]
[
.BI \-factorypath " path"
]
[
.BI \-factory " class"
]
[
.BI \-print
]
[
.BI \-nocompile
]
[
.BI \-A
[
.I key
[
.RI = val
]
]
]
[
.BI javac " option"
]
.I sourcefiles
[
.BI @ files
]
.SH DESCRIPTION
The tool apt, annotation processing tool, includes a set of 
new reflective APIs and supporting infrastructure to
process program annotations. The apt reflective APIs 
provide a build-time, source-based, read-only view of
program structure. These reflective APIs are designed 
to cleanly model the JavaTM programming language's
type system after the addition of generics. First, 
apt runs annotation processors that can produce new source
code and other files. Next, apt can cause compilation of 
both original and generated source files, easing
development. The reflective APIs and other APIs used 
to interact with the tool are subpackages of com.sun.mirror. 
.LP
A fuller discussion of how the tool operates as well as  
instructions for developing with apt are in Getting
Started with apt at 
http://java.sun.com/j2se/1.5.0/docs/guide/apt/GettingStarted.html.
.SH PARAMETERS 
Options may be in any order. For a discussion of parameters 
which apply to a specific option, see OPTIONS below.
.if t .TP 20
.if n .TP 15
.I sourcefiles
Zero or more source files to be processed.
.if t .TP 20
.if n .TP 15
.BI @ files
One or more files that list source files or other options.
.SH OPTIONS
.SS apt specific options
.if t .TP 20
.if n .TP 15
.BI \-s " dir"
Specify the directory root under which processor-generated 
source files will be placed; files are placed
in subdirectories based on package namespace. 
.if t .TP 20
.if n .TP 15
.BI \-nocompile
Do not compile sources files to class files.
.if t .TP 20
.if n .TP 15
.BI \-print
Print out textual representation of specified types; 
perform no annotation processing or compilation. 
.if t .TP 20
.if n .TP 15
.BI \-A[ key [= val ]]
Options to pass to annotation processors -- these are 
not interpreted by apt directly, but are made
available for use by individual processors 
.if t .TP 20
.if n .TP 15
.BI \-factorypath " path" 
Specify where to find annotation processor factories; if 
this option is used, the classpath is not searched
for factories. 
.if t .TP 20
.if n .TP 15
.BI \-factory " classname"
Name of annotation processor factory to use; 
bypasses default discovery process 
.SS Options shared with javac
.if t .TP 20
.if n .TP 15
.BI \-d " dir"
Specify where to place processor and javac generated class files 
.if t .TP 20
.if n .TP 15
.PD 0
.BI \-cp " path " 
or
.if t .TP 20
.if n .TP 15
.PD
.BI \-classpath " path"
Specify where to find user class files and annotation processor 
factories. If
.B \-factorypath
is given, the
classpath is not searched for factories. 
.LP
Consult the 
.BR javac (1) 
man page for information on 
.B javac 
options. 
.SH NOTES
The apt tool and its associated APIs may be changed or 
superseded in future j2se releases. 
.SH SEE ALSO
.BR javac (1)
.BR java (1)
