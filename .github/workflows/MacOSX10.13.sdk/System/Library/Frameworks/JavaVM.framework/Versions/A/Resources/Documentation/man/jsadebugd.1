'\" t
.\" @(#)jsadebugd.1 1.10 04/06/13 SMI;
.\" Copyright 2004 Sun Microsystems, Inc. All rights reserved.
.\" Copyright 2004 Sun Microsystems, Inc. Tous droits réservés.
.\" 
.TH jsadebugd 1 "13 June 2004" 
.SH NAME
jsadebugd \- serviceability agent debug daemon 
.\"
.SH SYNOPSIS
.B jsadebugd 
.RI [ pid ]
.RI [ server-id ]
.br
.B jsadebugd
.I executable  core  
.RI [ server-id ]
.SH DESCRIPTION
.B jsadebugd
attaches to a Java process or core file and 
acts as a debug server. Remote clients such as 
jstack, jmap, and jinfo can
attach to the server using Java Remote Method 
Invocation (RMI). Before starting jsadebugd, 
rmiregistry must be started with: 
.LP
.RS
.ft 3
.nf
rmiregistry -J-Xbootclasspath/p:$JAVA_HOME/lib/sajdi.jar
.fi
.ft 1
.RE
.LP
where $JAVA_HOME is the J2SE SDK installation directory. 
If rmiregistry was not started, jsadebugd will 
start an rmiregistry in a
standard (1099) port internally. Debug server may 
be stopped by sending SIGINT (pressing Ctrl-C) to it. 
.LP
.B NOTE -
This utility is unsupported and may or may not be 
available in future versions of the J2SE SDK. 
.B jinfo 
is not
currently available on Windows platforms or 
on the Linux Itanium platform. 
.SH PARAMETERS 
.if t .TP 20
.if n .TP 15
.I pid
process id of the process to which the debug 
server should attach. The process must be a 
Java process. To get a list of Java
processes running on a machine, jps may be used. 
At most one instance of the debug server 
may be attached to a single process. 
.if t .TP 20
.if n .TP 15
.I executable
Java executable from which the core dump was produced.
.if t .TP 20
.if n .TP 15
.I core
core file to which the debug server should attach.
.if t .TP 20
.if n .TP 15
.I server-id
optional unique id, needed if multiple debug servers are 
started on the same machine. This ID must be used by remote
clients to identify the particular debug server to 
attach. Within a single machine, this ID must be unique. 
.SH SEE ALSO
.BR jinfo (1)
.BR jmap (1)
.BR jps (1)
.BR jstack (1)
.BR rmiregistry (1)
