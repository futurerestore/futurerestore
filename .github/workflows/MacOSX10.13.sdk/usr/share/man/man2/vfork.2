.\"	$NetBSD: vfork.2,v 1.6 1995/02/27 12:39:30 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)vfork.2	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt VFORK 2
.Os BSD 4
.Sh NAME
.Nm vfork
.Nd spawn new process in a virtual memory efficient way
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft pid_t
.Fo vfork
.Fa void
.Fc
.Sh DESCRIPTION
.Fn vfork
can be used to create new processes without fully copying the address
space of the old process, which is horrendously inefficient in a paged
environment.  It is useful when the purpose of
.Xr fork 2
would have been to create a new system context for an
.Xr execve .
.Fn vfork
differs from
.Xr fork
in that the child borrows the parent's memory and thread of
control until a call to
.Xr execve 2
or an exit (either by a call to
.Xr exit 2
or abnormally.)
The parent process is suspended while the child is using its resources.
.Pp
.Fn vfork
returns 0 in the child's context and (later) the pid of the child in
the parent's context.
.Pp
.Fn vfork
can normally be used just like
.Xr fork .
It does not work, however, to return while running in the childs context
from the procedure that called
.Fn vfork
since the eventual return from
.Fn vfork
would then return to a no longer existent stack frame.
Be careful, also, to call
.Xr _exit
rather than
.Xr exit
if you can't
.Xr execve ,
since
.Xr exit
will flush and close standard I/O channels, and thereby mess up the
parent processes standard I/O data structures.
(Even with
.Xr fork
it is wrong to call
.Xr exit
since buffered data would then be flushed twice.)
.Sh SEE ALSO
.Xr execve 2 ,
.Xr fork 2 ,
.Xr sigaction 2 ,
.Xr wait 2 
.Sh ERRORS
The
.Fn vfork
system call will fail for any of the reasons described
in the
.Xr fork
man page.
In addition, it will fail if:
.Bl -tag -width Er
.\" ===========
.It Bq Er EINVAL
A system call other than
.Xr _exit()
or
.Xr execve()
(or libc functions that make no system calls other than those)
is called following calling a
.Fn vfork
call.
.El
.Sh BUGS
This system call will be eliminated when proper system sharing
mechanisms are implemented. 
Users should not depend on the memory
sharing semantics of
.Xr vfork
as it will, in that case, be made synonymous to
.Xr fork .
.Pp
To avoid a possible deadlock situation,
processes that are children in the middle
of a
.Fn vfork
are never sent
.Dv SIGTTOU
or
.Dv SIGTTIN
signals; rather,
output or
.Xr ioctl 2
calls
are allowed
and input attempts result in an end-of-file indication.
.Sh HISTORY
The
.Fn vfork
function call appeared in
.Bx 3.0 .
