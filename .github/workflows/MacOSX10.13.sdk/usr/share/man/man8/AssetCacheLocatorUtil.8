.\"Modified from man(1) of FreeBSD, the NetBSD mdoc.template, and mdoc.samples.
.\"See Also:
.\"man mdoc.samples for a complete listing of options
.\"man mdoc for the short list of editing options
.\"/usr/share/misc/mdoc.template
.Dd 7/28/16               \" DATE 
.Dt AssetCacheLocatorUtil 8      \" Program name and manual section number 
.Os "macOS"
.Sh NAME                 \" Section Header - required - don't modify 
.Nm AssetCacheLocatorUtil
.\" The following lines are read in generating the apropos(man -k) database. Use only key
.\" words here as the database is built based on the words here and in the .ND line. 
.\" .Nm Other_name_for_same_program(),
.\" .Nm Yet another name for the same program.
.\" Use .Nm macro to designate other names for the documented program.
.Nd Utility for reporting Caching Server information
.Sh SYNOPSIS             \" Section Header - required - don't modify
.Nm
.Op -j|--json
.Sh DESCRIPTION          \" Section Header - required - don't modify
.Nm
reports information related to macOS Server caching servers running on the computer or on the local network.
.Pp
Some of the information that
.Nm
reports depends on the current network configuration, and on the user running it.
It might produce different results for different users, on different client devices, or on different networks.
Applications that use caching servers might choose ones other than the ones
.Nm
reports due to factors beyond its knowledge, such as iCloud affinity.
.Pp
.Nm
reports the following information separately for system daemons and for the current user:
.Bl -tag
.It "Availability hint"
The system can temporarily save a hint about whether or not there might be caching server(s) on the computer or on the local network.
.Nm
prints that saved hint if it is available.
.It "Saved servers"
The system can temporarily save information about caching server(s) it has previously found on the computer or on the local network.
.Nm
prints that saved information if it is available.
.It "Refreshed servers"
.Nm
forces the system to search for caching server(s) on the computer and on the local network and to refresh the saved information above.
It then prints the results.
.It "Public IP address ranges"
If your network administrator has configured public IP address ranges in DNS,
which the system uses when looking up caching servers,
.Nm
prints those ranges.
.El
.Pp
.Nm
then reports the reachability status of all of the caching servers it found.
If the computer cannot communicate with a caching server over the local network then it cannot request files from that caching server.
However, just because the computer can "ping" a caching server does not imply that that caching server will serve requests sent from this computer.
.Pp
The --json option prints the results in machine-parseable JSON format to stdout.
.Sh WARNINGS
.Nm
also reports warnings about potential issues it discovers.
.Pp
The Apple cloud service with which caching servers register limits the number of caching servers on a network.
This limit can change at any time.
If a larger number of caching servers are available on a network than the cloud allows, client devices might not always
choose the "best" server.
.Nm
warns when it detects this possibility.
The number of caching servers available on a network can be reduced by changing the permissions of some of the caching servers, using
.Ic "Server > Caching > Edit Permissions... > Cache content for clients connecting from:" .
.Pp
.Nm
also warns when it detects caching servers with different
.Em ranks .
The exact value and meaning of each rank is defined by the Apple cloud service with which caching servers register,
and can change at any time,
but each client device will use only the caching servers with the lowest-numbered rank available to it.
A caching server's rank can be changed by adjusting its network permissions, using
.Ic "Server > Caching > Edit Permissions... > Cache content for clients connecting from:" .
A caching server on the same computer as the client always has the lowest-numbered rank.
.Pp
Having caching servers in different ranks can be intentional or accidental,
depending on your organization.
.Nm
warns about mixed ranks in case it is accidental.
An example of an intentional use of mixed ranks is when a school has a caching server with its permissions set to
.Ic "only local subnets"
and the school's district office has another caching server with its permissions set to
.Ic "all networks" .
Client devices in the school will always use the school's caching server.
Client devices in a different school in the same district will always use the district's caching server.
.Pp
Every caching server should have a unique GUID.
.Nm
warns when it finds caching servers in your organization with duplicate GUIDs.
A caching server's GUID can be changed by stopping the caching server,
running the following command in Terminal,
and then restarting it:
.Ic "sudo serveradmin settings caching:ServerGUID = `uuidgen`"
.Pp
Another issue about which
.Nm
warns is when public IP address ranges are configured but the client device's public IP address is not in the configured ranges.
This could prevent the device from using your organization's caching servers.
To configure public IP address ranges use
.Ic "Server > Caching > Edit Permissions... > Serve clients with public addresses:"
and set DNS TXT records appropriately.
