.TH "MPSNNFilterNode" 3 "Sun Jul 2 2017" "Version MetalPerformanceShaders-84.1" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSNNFilterNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits NSObject\&.
.PP
Inherited by \fBMPSCNNConvolutionNode\fP, \fBMPSCNNDilatedPoolingMaxNode\fP, \fBMPSCNNLogSoftMaxNode\fP, \fBMPSCNNNeuronNode\fP, \fBMPSCNNNormalizationNode\fP, \fBMPSCNNPoolingNode\fP, \fBMPSCNNSoftMaxNode\fP, \fBMPSCNNUpsamplingBilinearNode\fP, \fBMPSCNNUpsamplingNearestNode\fP, \fBMPSNNBinaryArithmeticNode\fP, \fBMPSNNConcatenationNode\fP, and \fBMPSNNScaleNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinit\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBMPSNNImageNode\fP * \fBresultImage\fP"
.br
.ti -1c
.RI "\fBMPSNNStateNode\fP * \fBresultState\fP"
.br
.ti -1c
.RI "NSArray< \fBMPSNNStateNode\fP * > * \fBresultStates\fP"
.br
.ti -1c
.RI "id< \fBMPSNNPadding\fP > \fBpaddingPolicy\fP"
.br
.ti -1c
.RI "NSString * \fBlabel\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
A placeholder node denoting a neural network filter stage  There are as many \fBMPSNNFilterNode\fP subclasses as there are MPS neural network filter objects\&. Make one of those\&. This class defines an polymorphic interface for them\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) init "

.SH "Property Documentation"
.PP 
.SS "\- label\fC [read]\fP, \fC [write]\fP, \fC [atomic]\fP, \fC [copy]\fP"
A string to help identify this object\&. 
.SS "\- (id<\fBMPSNNPadding\fP>) paddingPolicy\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [retain]\fP"
The padding method used for the filter node  The default value varies per filter\&. 
.SS "\- (\fBMPSNNImageNode\fP*) resultImage\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
Get the node representing the image result of the filter  Except where otherwise noted, the precision used for the result image (see format property) is copied from the precision from the first input image node\&. 
.SS "\- (\fBMPSNNStateNode\fP*) resultState\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
convenience method for resultStates[0]  If resultStates is nil, returns nil 
.SS "\- (NSArray<\fBMPSNNStateNode\fP*>*) resultStates\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
Get the node representing the state result of the filter  If more than one, see description of subclass for ordering\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
