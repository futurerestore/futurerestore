.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "InternetConfig 3"
.TH InternetConfig 3 "2017-07-07" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::InternetConfig \- Interface to Peter Lewis' and Quinns Internet Config system
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to the original Internet Config documentation is essential for proper use 
of these functions.
.SS "Constants"
.IX Subsection "Constants"
.IP "kICRealName" 4
.IX Item "kICRealName"
.PD 0
.IP "kICEmail" 4
.IX Item "kICEmail"
.IP "kICMailAccount" 4
.IX Item "kICMailAccount"
.IP "kICMailPassword" 4
.IX Item "kICMailPassword"
.IP "kICNewsAuthUsername" 4
.IX Item "kICNewsAuthUsername"
.IP "kICNewsAuthPassword" 4
.IX Item "kICNewsAuthPassword"
.IP "kICArchiePreferred" 4
.IX Item "kICArchiePreferred"
.IP "kICArchieAll" 4
.IX Item "kICArchieAll"
.IP "kICUMichPreferred" 4
.IX Item "kICUMichPreferred"
.IP "kICUMichAll" 4
.IX Item "kICUMichAll"
.IP "kICInfoMacPreferred" 4
.IX Item "kICInfoMacPreferred"
.IP "kICInfoMacAll" 4
.IX Item "kICInfoMacAll"
.IP "kICPhHost" 4
.IX Item "kICPhHost"
.IP "kICWhoisHost" 4
.IX Item "kICWhoisHost"
.IP "kICFingerHost" 4
.IX Item "kICFingerHost"
.IP "kICFTPHost" 4
.IX Item "kICFTPHost"
.IP "kICTelnetHost" 4
.IX Item "kICTelnetHost"
.IP "kICSMTPHost" 4
.IX Item "kICSMTPHost"
.IP "kICNNTPHost" 4
.IX Item "kICNNTPHost"
.IP "kICGopherHost" 4
.IX Item "kICGopherHost"
.IP "kICLDAPServer" 4
.IX Item "kICLDAPServer"
.IP "kICLDAPSearchbase" 4
.IX Item "kICLDAPSearchbase"
.IP "kICWWWHomePage" 4
.IX Item "kICWWWHomePage"
.IP "kICWAISGateway" 4
.IX Item "kICWAISGateway"
.IP "kICListFont" 4
.IX Item "kICListFont"
.IP "kICScreenFont" 4
.IX Item "kICScreenFont"
.IP "kICPrinterFont" 4
.IX Item "kICPrinterFont"
.IP "kICTextCreator" 4
.IX Item "kICTextCreator"
.IP "kICBinaryTypeCreator" 4
.IX Item "kICBinaryTypeCreator"
.IP "kICDownloadFolder" 4
.IX Item "kICDownloadFolder"
.IP "kICSignature" 4
.IX Item "kICSignature"
.IP "kICOrganization" 4
.IX Item "kICOrganization"
.IP "kICPlan" 4
.IX Item "kICPlan"
.IP "kICQuotingString" 4
.IX Item "kICQuotingString"
.IP "kICMailHeaders" 4
.IX Item "kICMailHeaders"
.IP "kICNewsHeaders" 4
.IX Item "kICNewsHeaders"
.IP "kICMapping" 4
.IX Item "kICMapping"
.IP "kICCharacterSet" 4
.IX Item "kICCharacterSet"
.IP "kICHelper" 4
.IX Item "kICHelper"
.IP "kICServices" 4
.IX Item "kICServices"
.IP "kICNewMailFlashIcon" 4
.IX Item "kICNewMailFlashIcon"
.IP "kICNewMailDialog" 4
.IX Item "kICNewMailDialog"
.IP "kICNewMailPlaySound" 4
.IX Item "kICNewMailPlaySound"
.IP "kICNewMailSoundName" 4
.IX Item "kICNewMailSoundName"
.IP "kICWebBackgroundColour" 4
.IX Item "kICWebBackgroundColour"
.IP "kICNoProxyDomains" 4
.IX Item "kICNoProxyDomains"
.IP "kICUseSocks" 4
.IX Item "kICUseSocks"
.IP "kICSocksHost" 4
.IX Item "kICSocksHost"
.IP "kICUseHTTPProxy" 4
.IX Item "kICUseHTTPProxy"
.IP "kICHTTPProxyHost" 4
.IX Item "kICHTTPProxyHost"
.IP "kICUseFTPProxy" 4
.IX Item "kICUseFTPProxy"
.IP "kICFTPProxyHost" 4
.IX Item "kICFTPProxyHost"
.IP "kICFTPProxyUser" 4
.IX Item "kICFTPProxyUser"
.IP "kICFTPProxyPassword" 4
.IX Item "kICFTPProxyPassword"
.IP "kICFTPProxyAccount" 4
.IX Item "kICFTPProxyAccount"
.PD
Internet Config settings.
.IP "ICmap_binary" 4
.IX Item "ICmap_binary"
.PD 0
.IP "ICmap_resource_fork" 4
.IX Item "ICmap_resource_fork"
.IP "ICmap_data_fork" 4
.IX Item "ICmap_data_fork"
.IP "ICmap_post" 4
.IX Item "ICmap_post"
.IP "ICmap_not_incoming" 4
.IX Item "ICmap_not_incoming"
.IP "ICmap_not_outgoing" 4
.IX Item "ICmap_not_outgoing"
.IP "ICservices_tcp" 4
.IX Item "ICservices_tcp"
.IP "ICservices_udp" 4
.IX Item "ICservices_udp"
.IP "icNoPerm" 4
.IX Item "icNoPerm"
.IP "icReadOnlyPerm" 4
.IX Item "icReadOnlyPerm"
.IP "icReadWritePerm" 4
.IX Item "icReadWritePerm"
.PD
Various constants.
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "$ICInstance" 4
.el .IP "\f(CW$ICInstance\fR" 4
.IX Item "$ICInstance"
The instance of the Internet Config database.
.ie n .IP "%RawInternetConfig" 4
.el .IP "\f(CW%RawInternetConfig\fR" 4
.IX Item "%RawInternetConfig"
Access the raw, uninterpreted value of an Internet Config setting.
.ie n .IP "%InternetConfig" 4
.el .IP "\f(CW%InternetConfig\fR" 4
.IX Item "%InternetConfig"
Access a sane Perl version of one of the more common Internet Config settings.
.ie n .IP "%InternetConfigMap" 4
.el .IP "\f(CW%InternetConfigMap\fR" 4
.IX Item "%InternetConfigMap"
Access the Internet Config file map to:
.RS 4
.IP "filename" 4
.IX Item "filename"
Determine the file type and creator for a newly created file:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{"output.html"};
.Ve
.IP "type/creator" 4
.IX Item "type/creator"
Determine the extension to use for some type/creator combination:
.Sp
.Vb 1
\&    $map = $InternetConfigMap{["WDBN", "MSWD"]};
.Ve
.RE
.RS 4
.RE
.SS "Types"
.IX Subsection "Types"
.IP "ICMapEntry" 4
.IX Item "ICMapEntry"
An entry in the file map. Fields are:
.Sp
.Vb 10
\&    short     version;
\&    OSType    file_type;
\&    OSType    file_creator;
\&    OSType    post_creator;
\&    long      flags;
\&    Str255    extension;
\&    Str255    creator_app_name;
\&    Str255    post_app_name;
\&    Str255    MIME_type;
\&    Str255    entry_name;
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "ICStart" 4
.IX Item "ICStart"
.PD 0
.IP "ICStart \s-1CREATOR\s0" 4
.IX Item "ICStart CREATOR"
.PD
Call this at application initialisation. Set creator to your application creator to 
allow for future expansion of the \s-1IC\s0 system (Default is MacPerl's creator). Returns 
a connection to the \s-1IC\s0 system.
.IP "ICStop \s-1INST\s0" 4
.IX Item "ICStop INST"
It is illegal to call this routine inside a ICBegin/End pair.
Call this at application termination, after which \s-1INST\s0
is no longer valid connection to \s-1IC.\s0
.ie n .IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE,\s0 @FOLDERS" 4
.el .IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE,\s0 \f(CW@FOLDERS\fR" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE, @FOLDERS"
.PD 0
.IP "ICGeneralFindConfigFile \s-1INST, SEARCH_PREFS, CAN_CREATE\s0" 4
.IX Item "ICGeneralFindConfigFile INST, SEARCH_PREFS, CAN_CREATE"
.IP "ICGeneralFindConfigFile \s-1INST\s0" 4
.IX Item "ICGeneralFindConfigFile INST"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
It is illegal to call this routine inside a ICBegin/End pair.
Call to configure this connection to \s-1IC.\s0
This routine acts as a more general replacement for
ICFindConfigFile and ICFindUserConfigFile.
Set search_prefs to 1 (default) if you want it to search the preferences folder.
Set can_create to 1 if you want it to be able to create a new config.
Set count as the number of valid elements in folders.
Set folders to a pointer to the folders to search.
Setting count to 0 and folders to nil is \s-1OK.\s0
Searches the specified folders and then optionally the Preferences folder
in a unspecified manner.
.IP "ICChooseConfig \s-1INST\s0" 4
.IX Item "ICChooseConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICChooseNewConfig \s-1INST\s0" 4
.IX Item "ICChooseNewConfig INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Requests the user to choose a new configuration, typically using some
sort of modal dialog. If the user cancels the dialog the configuration
state will be unaffected.
.IP "ICGetConfigName \s-1INST, LONGNAME\s0" 4
.IX Item "ICGetConfigName INST, LONGNAME"
.PD 0
.IP "ICGetConfigName \s-1INST\s0" 4
.IX Item "ICGetConfigName INST"
.PD
Requires \s-1IC 1.2.\s0
You must specify a configuration before calling this routine.
Returns a string that describes the current configuration at a user
level. Set longname to 1 if you want a long name, up to 255
characters, or 0 (default) if you want a short name, typically about 32
characters.
The returned string is for user display only. If you rely on the
exact format of it, you will conflict with any future \s-1IC\s0
implementation that doesn't use explicit preference files.
.IP "ICGetConfigReference \s-1INST\s0" 4
.IX Item "ICGetConfigReference INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
You must specify a configuration before calling this routine.
Returns a self-contained reference to the instance's current
configuration.
.IP "ICSetConfigReference \s-1INST, REF, FLAGS\s0" 4
.IX Item "ICSetConfigReference INST, REF, FLAGS"
.PD 0
.IP "ICSetConfigReference \s-1INST, REF\s0" 4
.IX Item "ICSetConfigReference INST, REF"
.PD
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
It is illegal to call this routine inside a ICBegin/End pair.
Reconfigures the instance using a configuration reference that was
got using ICGetConfigReference reference. Set the
icNoUserInteraction_bit in flags if you require that this routine
not present a modal dialog. Other flag bits are reserved and should
be set to zero.
.IP "ICGetSeed \s-1INST\s0" 4
.IX Item "ICGetSeed INST"
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the current seed for the \s-1IC\s0 prefs database.
This seed changes each time a non-volatile preference is changed.
You can poll this to determine if any cached preferences change.
.IP "ICGetComponentInstance \s-1INST\s0" 4
.IX Item "ICGetComponentInstance INST"
\&\fBMac \s-1OS\s0 only.\fR
.Sp
Requires \s-1IC 1.2.\s0
You do not have to specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Returns the connection to the \s-1IC\s0 component.
.IP "ICBegin \s-1INST, PERM\s0" 4
.IX Item "ICBegin INST, PERM"
You must specify a configuration before calling this routine. It is illegal to
call this routine inside a ICBegin/End pair. Starting reading or writing
multiple preferences. A call to this must be balanced by a call to ICEnd. Do
not call WaitNextEvent between these calls. The perm specifies whether you
intend to read or read/write. Only one writer is allowed per instance. Note
that this may open resource files that are not closed until you call ICEnd.
.IP "ICGetPref \s-1INST, KEY\s0" 4
.IX Item "ICGetPref INST, KEY"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadOnlyPerm).
Reads the preference specified by key from the \s-1IC\s0 database to the
buffer pointed to by buf and size.
key must not be the empty string.
If called in a scalar context, return the preference. If called in a list
context, additionally returns the attributes.
Returns icPrefNotFound if there is no preference for the key.
.IP "ICSetPref \s-1INST, KEY, VALUE\s0 =item ICSetPref \s-1INST, KEY, VALUE, ATTR\s0" 4
.IX Item "ICSetPref INST, KEY, VALUE =item ICSetPref INST, KEY, VALUE, ATTR"
You must specify a configuration before calling this routine.
If you are getting or setting multiple preferences, you should place
these calls within an ICBegin/ICEnd pair.
If you call this routine outside of such a pair, it implicitly
calls ICBegin(inst, icReadWritePerm).
Sets the preference specified by \s-1KEY\s0 from the \s-1IC\s0 database to the
\&\s-1VALUE.\s0 If attr is ICattr_no_change (the default) then the preference attributes 
are not set. Otherwise the preference attributes are set to attr.
Returns icPermErr if the previous ICBegin was passed icReadOnlyPerm.
Returns icPermErr if current attr is locked, new attr is locked.
.IP "ICCountPref \s-1INST\s0" 4
.IX Item "ICCountPref INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Counts the total number of preferences.
.IP "ICGetIndPref	\s-1INST, N\s0" 4
.IX Item "ICGetIndPref INST, N"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Returns the key of the Nth preference.
n must be positive.
Returns icPrefNotFoundErr if n is greater than the total number of preferences.
.IP "ICDeletePref \s-1INST, KEY\s0" 4
.IX Item "ICDeletePref INST, KEY"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Deletes the preference specified by \s-1KEY.
KEY\s0 must not be the empty string.
Returns icPrefNotFound if the preference specified by key is not present.
.IP "ICEnd \s-1INST\s0" 4
.IX Item "ICEnd INST"
You must specify a configuration before calling this routine.
You must be inside an ICBegin/End pair to call this routine.
Terminates a preference session, as started by ICBegin.
You must have called ICBegin before calling this routine.
.IP "ICEditPreferences	\s-1INST, KEY\s0" 4
.IX Item "ICEditPreferences INST, KEY"
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Instructs \s-1IC\s0 to display the user interface associated with editing
preferences and focusing on the preference specified by key.
If key is the empty string then no preference should be focused upon.
You must have specified a configuration before calling this routine.
You do not need to call ICBegin before calling this routine.
In the current implementation this launches the \s-1IC\s0 application
(or brings it to the front) and displays the window containing
the preference specified by key.
It may have a radically different implementation in future
\&\s-1IC\s0 systems.
.IP "ICParseURL \s-1INST, HINT, DATA, START, END\s0" 4
.IX Item "ICParseURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICParseURL \s-1INST, HINT, DATA\s0" 4
.IX Item "ICParseURL INST, HINT, DATA"
.PD
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and returns it in a canonical form
in a handle.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START X END\s0 and 0 X \s-1START X\s0 length(\s-1DATA\s0) and 0 X \s-1END X\s0 length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL.\s0 In an array context, returns \s-1URL, START, END.\s0
.IP "ICLaunchURL \s-1INST, HINT, DATA, START, END\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA, START, END"
.PD 0
.IP "ICLaunchURL \s-1INST, HINT, DATA\s0" 4
.IX Item "ICLaunchURL INST, HINT, DATA"
.PD
Requires \s-1IC 1.1.\s0
You must specify a configuration before calling this routine.
You do not have to be inside an ICBegin/End pair to call this routine.
Parses a \s-1URL\s0 out of the specified text and feeds it off to the appropriate helper.
\&\s-1HINT\s0 indicates the default scheme for URLs of the form \*(L"name@address\*(R".
If \s-1HINT\s0 is the empty string then URLs of that form are not allowed.
\&\s-1DATA\s0 contains the text.
\&\s-1START\s0 and \s-1END\s0 should be passed in as the current selection of
the text. This selection is given in the same manner as TextEdit,
ie if \s-1START\s0 == \s-1END\s0 then there is no selection only an insertion
point. Also \s-1START X END\s0 and 0 X \s-1START X\s0 length(\s-1DATA\s0) and 0 X \s-1END X\s0 length(\s-1DATA\s0).
If \s-1START\s0 and \s-1END\s0 are omitted, the whole of \s-1DATA\s0 is assumed.
In a scalar context, returns \s-1URL.\s0 In an array context, returns \s-1URL, START, END.\s0
.IP "ICMapFileName \s-1INST, NAME\s0" 4
.IX Item "ICMapFileName INST, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapTypeCreator \s-1INST, TYPE, CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapTypeCreator INST, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICMapEntriesFileName \s-1INST, ENTRIES, NAME\s0" 4
.IX Item "ICMapEntriesFileName INST, ENTRIES, NAME"
Returns the \f(CW\*(C`ICMapEntry\*(C'\fR matching best the given name.
.IP "ICMapEntriesTypeCreator \s-1INST, ENTRIES, TYPE, CREATOR\s0 [, \s-1NAME\s0]" 4
.IX Item "ICMapEntriesTypeCreator INST, ENTRIES, TYPE, CREATOR [, NAME]"
Takes the type and creator (and optionally the name) of an outgoing
file and returns the most appropriate \f(CW\*(C`ICMapEntry\*(C'\fR.
.IP "ICCountMapEntries	\s-1INST, ENTRIES\s0" 4
.IX Item "ICCountMapEntries INST, ENTRIES"
Counts the number of entries in the map.
.IP "ICGetIndMapEntry \s-1INST, ENTRIES, INDEX\s0" 4
.IX Item "ICGetIndMapEntry INST, ENTRIES, INDEX"
Returns the position of a map entry and the entry itself.
.Sp
.Vb 2
\&    $map = ICGetIndMapEntry $inst, $entries, 5;
\&    ($pos, $map) = ICGetIndMapEntry $inst, $entries, 5;
.Ve
.IP "ICGetMapEntry \s-1INST, ENTRIES, POS\s0" 4
.IX Item "ICGetMapEntry INST, ENTRIES, POS"
Returns the entry located at position pos in the mappings database.
.IP "ICSetMapEntry \s-1INST, ENTRIES, POS, ENTRY\s0" 4
.IX Item "ICSetMapEntry INST, ENTRIES, POS, ENTRY"
Replace the entry at position pos
.IP "ICDeleteMapEntry \s-1INST, ENTRIES, POS\s0" 4
.IX Item "ICDeleteMapEntry INST, ENTRIES, POS"
Delete the entry at position pos
.IP "ICAddMapEntry \s-1INST, ENTRIES, ENTRY\s0" 4
.IX Item "ICAddMapEntry INST, ENTRIES, ENTRY"
Add an entry to the database.
.IP "GetURL \s-1URL\s0" 4
.IX Item "GetURL URL"
Launch helper app with \s-1URL. \s0 Returns undef on error.
.IP "GetICHelper \s-1PROTOCOL\s0" 4
.IX Item "GetICHelper PROTOCOL"
Return list of creator \s-1ID\s0 and name for helper app assigned
to \s-1PROTOCOL. \s0 Returns only creator \s-1ID\s0 in scalar context.
Returns undef on error.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 420:" 4
.IX Item "Around line 420:"
Non-ASCII character seen before =encoding in 'X'. Assuming \s-1ISO8859\-1\s0
