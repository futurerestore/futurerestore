.TH "MPSCNNPoolingNode" 3 "Sun Jul 2 2017" "Version MetalPerformanceShaders-84.1" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSCNNPoolingNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits \fBMPSNNFilterNode\fP\&.
.PP
Inherited by \fBMPSCNNPoolingAverageNode\fP, \fBMPSCNNPoolingL2NormNode\fP, and \fBMPSCNNPoolingMaxNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSource:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSource:filterSize:stride:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSource:filterSize:\fP"
.br
.in -1c
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSource:filterSize:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSource:filterSize:stride:\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A node for a \fBMPSCNNPooling\fP kernel  This is an abstract base class that does not correspond with any particular \fBMPSCNNKernel\fP\&. Please make one of the \fBMPSCNNPooling\fP subclasses instead\&. 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode(NSUInteger) size"
Convenience initializer for \fBMPSCNNPooling\fP nodes with square non-overlapping kernels 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNode\fP The \fBMPSNNImageNode\fP representing the source \fBMPSImage\fP for the filter 
.br
\fIsize\fP kernelWidth = kernelHeight = strideInPixelsX = strideInPixelsY = size 
.RE
.PP
\fBReturns:\fP
.RS 4
A new MPSNNFilter node for a \fBMPSCNNPooling\fP kernel\&. 
.RE
.PP

.SS "\- (nonnull instancetype) initWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode(NSUInteger) size(NSUInteger) stride"
Convenience initializer for \fBMPSCNNPooling\fP nodes with square kernels 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNode\fP The \fBMPSNNImageNode\fP representing the source \fBMPSImage\fP for the filter 
.br
\fIsize\fP kernelWidth = kernelHeight = size 
.br
\fIstride\fP strideInPixelsX = strideInPixelsY = stride 
.RE
.PP
\fBReturns:\fP
.RS 4
A new MPSNNFilter node for a \fBMPSCNNPooling\fP kernel\&. 
.RE
.PP

.SS "\- (nonnull instancetype) initWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode(NSUInteger) kernelWidth(NSUInteger) kernelHeight(NSUInteger) strideInPixelsX(NSUInteger) strideInPixelsY"
Init a node representing a \fBMPSCNNPooling\fP kernel 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNode\fP The \fBMPSNNImageNode\fP representing the source \fBMPSImage\fP for the filter 
.br
\fIkernelWidth\fP The width of the max filter window 
.br
\fIkernelHeight\fP The height of the max filter window 
.br
\fIstrideInPixelsX\fP The output stride (downsampling factor) in the x dimension\&. 
.br
\fIstrideInPixelsY\fP The output stride (downsampling factor) in the y dimension\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
A new MPSNNFilter node for a \fBMPSCNNPooling\fP kernel\&. 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode(NSUInteger) size"
Convenience initializer for \fBMPSCNNPooling\fP nodes with square non-overlapping kernels 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNode\fP The \fBMPSNNImageNode\fP representing the source \fBMPSImage\fP for the filter 
.br
\fIsize\fP kernelWidth = kernelHeight = strideInPixelsX = strideInPixelsY = size 
.RE
.PP
\fBReturns:\fP
.RS 4
A new MPSNNFilter node for a \fBMPSCNNPooling\fP kernel\&. 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithSource: (\fBMPSNNImageNode\fP *__nonnull) sourceNode(NSUInteger) size(NSUInteger) stride"
Convenience initializer for \fBMPSCNNPooling\fP nodes with square non-overlapping kernels and a different stride 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNode\fP The \fBMPSNNImageNode\fP representing the source \fBMPSImage\fP for the filter 
.br
\fIsize\fP kernelWidth = kernelHeight = size 
.br
\fIstride\fP strideInPixelsX = strideInPixelsY = stride 
.RE
.PP
\fBReturns:\fP
.RS 4
A new MPSNNFilter node for a \fBMPSCNNPooling\fP kernel\&. 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
