.TH "MPSImageTypes.h" 3 "Sun Jul 2 2017" "Version MetalPerformanceShaders-84.1" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSImageTypes.h
.SH SYNOPSIS
.br
.PP
\fC#import <MPSCore/MPSCoreTypes\&.h>\fP
.br

.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBMPSAlphaType\fP \fBMPSAlphaType\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBMPSAlphaType\fP { \fBMPSAlphaTypeNonPremultiplied\fP, \fBMPSAlphaTypeAlphaIsOne\fP, \fBMPSAlphaTypePremultiplied\fP }"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef enum \fBMPSAlphaType\fP

     \fBMPSAlphaType\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBMPSAlphaType\fP"
Premultiplication description for the color channels of a texture  Some image data is premultiplied\&. That is to say that the color channels are stored instead as color * alpha\&. This is an optimization for image compositing (alpha blending), but it can get in the way of most other image filters, especially those that apply non-linear affects like the MPSImageParametricCurveTransform multidimensional lookup tables, and functions like convolution or resampling filters that look at adjacent pixels, where the alpha may not be the same\&. 
.PP
.nf
Some basic conversion cases:
    source                              destination                         operation
    ------                              -----------                         ---------
    MPSAlphaTypeNonPremultiplied        MPSAlphaTypeNonPremultiplied        <none>
    MPSAlphaTypeNonPremultiplied        MPSAlphaTypeAlphaIsOne              composite with opaque background color
    MPSAlphaTypeNonPremultiplied        MPSAlphaTypePremultiplied           multiply color channels by alpha
    MPSAlphaTypeAlphaIsOne              MPSAlphaTypeNonPremultiplied        set alpha to 1
    MPSAlphaTypeAlphaIsOne              MPSAlphaTypeAlphaIsOne              set alpha to 1
    MPSAlphaTypeAlphaIsOne              MPSAlphaTypePremultiplied           set alpha to 1
    MPSAlphaTypePremultiplied           MPSAlphaTypeNonPremultiplied        divide color channels by alpha
    MPSAlphaTypePremultiplied           MPSAlphaTypeAlphaIsOne              composite with opaque background color
    MPSAlphaTypePremultiplied           MPSAlphaTypePremultiplied           <none>

.fi
.PP
 
.PP
.nf
        Color space conversion operations require the format to be either MPSPixelAlpha_NonPremultiplied or
        MPSPixelAlpha_AlphaIsOne to work correctly. A number of MPSKernels have similar requirements. If
        premultiplied data is provided or requested, extra operations will be added to the conversion to
        ensure correct operation. Fully opaque images should use MPSAlphaTypeAlphaIsOne.

.fi
.PP
.PP
MPSAlphaTypeNonPremultiplied Image is not premultiplied by alpha\&. Alpha is not guaranteed to be 1\&. (kCGImageAlphaFirst/Last)  MPSAlphaTypeAlphaIsOne Alpha is guaranteed to be 1, even if it is not encoded as 1 or not encoded at all\&. (kCGImageAlphaNoneSkipFirst/Last, kCGImageAlphaNone)  MPSAlphaTypePremultiplied Image is premultiplied by alpha\&. Alpha is not guaranteed to be 1\&. (kCGImageAlphaPremultipliedFirst/Last) 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIMPSAlphaTypeNonPremultiplied \fP\fP
.TP
\fB\fIMPSAlphaTypeAlphaIsOne \fP\fP
.TP
\fB\fIMPSAlphaTypePremultiplied \fP\fP
.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
