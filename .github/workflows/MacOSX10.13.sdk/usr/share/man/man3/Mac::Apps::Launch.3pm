.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Launch 3"
.TH Launch 3 "2007-01-03" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Apps::Launch \- Mac module to launch /quit applications
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\&    use Mac::Apps::Launch;
\&    my @apps = qw(R*ch Arch MPGP);
\&    my $path = "HD:System Folder:Finder";
\&    LaunchApps([@apps], 1) or warn $^E; # launch and switch to front
\&    LaunchApps([@apps])    or warn $^E; # launch and don\*(Aqt switch 
\&    LaunchApps($app, 1)    or warn $^E; # launch and switch to front
\&    LaunchSpecs($path, 1)  or warn $^E; # use path instead of app ID
\&    QuitApps(@apps)        or warn $^E; # quit all @apps
\&    QuitAllApps(@apps)     or warn $^E; # quit all except @apps
\&    IsRunning(\*(AqMACS\*(Aq);                  # returns boolean for whether
\&                                        # given app ID is running
\&    SetFront(\*(AqMACS\*(Aq)       or warn $^E; # set Finder to front
\&    Hide(\*(AqMACS\*(Aq)           or warn $^E; # hide Finder
\&    Show(\*(AqFinder\*(Aq, 1)      or warn $^E; # show Finder (1 == use name)
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Simply launch or quit applications by their creator \s-1ID. \s0 The Finder can
be quit in this way, though it cannot be launched in this way.
.PP
This module is used by many other modules.
.PP
This module as written does not work with MacPerls prior to 5.1.4r4.
.PP
\&\f(CW\*(C`Hide\*(C'\fR and \f(CW\*(C`Show\*(C'\fR do not currently work on Mac \s-1OS X.\s0
.PP
Apps that don't have signatures under Mac \s-1OS X\s0 currently aren't handled,
except with \fILaunchSpecs()\fR.
.PP
\&\f(CW\*(C`SetFront\*(C'\fR and \f(CW\*(C`IsRunning\*(C'\fR can take a four-char creator \s-1ID \s0('\s-1MACS\s0'), a
bundle \s-1ID \s0('com.apple.Finder'), or a path
(\fI/System/Library/CoreServices/Finder.app\fR).  They both optionally take
a second parameter which affirms that the data is indeed a path (for
those rare cases where a path might possibly look like a creator \s-1ID\s0
or bundle \s-1ID ...\s0 you never know).
.PP
\&\f(CW\*(C`IsRunning\*(C'\fR will return the \s-1PSN\s0 of the application if it is running,
which you can then use for targetting the app, or converting to a \s-1PID
\&\s0(with \f(CW\*(C`Mac::Processes::GetProcessPID()\*(C'\fR), to send signals to it.
.SH "EXPORT"
.IX Header "EXPORT"
Exports functions \f(CW\*(C`QuitApps\*(C'\fR, \f(CW\*(C`QuitAllApps\*(C'\fR, and \f(CW\*(C`LaunchApps\*(C'\fR,
\&\f(CW\*(C`IsRunning\*(C'\fR, \f(CW\*(C`LaunchSpecs\*(C'\fR, \f(CW\*(C`SetFront\*(C'\fR, \f(CW\*(C`Hide\*(C'\fR, \f(CW\*(C`Show\*(C'\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Chris Nandor <pudge@pobox.com>, http://pudge.net/
.PP
Copyright (c) 1999\-2005 Chris Nandor.  All rights reserved.  This program
is free software; you can redistribute it and/or modify it under the same
terms as Perl itself.
