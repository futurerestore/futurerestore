.TH "MPSNNBinaryArithmeticNode" 3 "Sun Jul 2 2017" "Version MetalPerformanceShaders-84.1" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSNNBinaryArithmeticNode
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSNNGraphNodes\&.h>\fP
.PP
Inherits \fBMPSNNFilterNode\fP\&.
.PP
Inherited by \fBMPSNNAdditionNode\fP, \fBMPSNNDivisionNode\fP, \fBMPSNNMultiplicationNode\fP, and \fBMPSNNSubtractionNode\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithSources:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithLeftSource:rightSource:\fP"
.br
.in -1c
.SS "Class Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithSources:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) + \fBnodeWithLeftSource:rightSource:\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
virtual base class for basic arithmetic nodes 
.SH "Method Documentation"
.PP 
.SS "\- (nonnull instancetype) initWithLeftSource: (\fBMPSNNImageNode\fP *__nonnull) left(\fBMPSNNImageNode\fP *__nonnull) right"
init an arithemtic node with two sources 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP the left operand 
.br
\fIright\fP the right operand 
.RE
.PP

.SS "\- (nonnull instancetype) initWithSources: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) sourceNodes"
init an arithemtic node with an array of sources 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNodes\fP A valid NSArray containing two sources 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithLeftSource: (\fBMPSNNImageNode\fP *__nonnull) left(\fBMPSNNImageNode\fP *__nonnull) right"
create an autoreleased arithemtic node with two sources 
.PP
\fBParameters:\fP
.RS 4
\fIleft\fP the left operand 
.br
\fIright\fP the right operand 
.RE
.PP

.SS "+ (nonnull instancetype) nodeWithSources: (NSArray< \fBMPSNNImageNode\fP * > *__nonnull) sourceNodes"
create an autoreleased arithemtic node with an array of sources 
.PP
\fBParameters:\fP
.RS 4
\fIsourceNodes\fP A valid NSArray containing two sources 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
