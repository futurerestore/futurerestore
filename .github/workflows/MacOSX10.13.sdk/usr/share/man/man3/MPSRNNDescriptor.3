.TH "MPSRNNDescriptor" 3 "Sun Jul 2 2017" "Version MetalPerformanceShaders-84.1" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSRNNDescriptor
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSRNNLayer\&.h>\fP
.PP
Inherits NSObject\&.
.PP
Inherited by \fBMPSGRUDescriptor\fP, \fBMPSLSTMDescriptor\fP, and \fBMPSRNNSingleGateDescriptor\fP\&.
.SS "Properties"

.in +1c
.ti -1c
.RI "NSUInteger \fBinputFeatureChannels\fP"
.br
.ti -1c
.RI "NSUInteger \fBoutputFeatureChannels\fP"
.br
.ti -1c
.RI "BOOL \fBuseLayerInputUnitTransformMode\fP"
.br
.ti -1c
.RI "BOOL \fBuseFloat32Weights\fP"
.br
.ti -1c
.RI "id< \fBMPSCNNConvolutionDataSource\fP > \fBinputTransform\fP"
.br
.ti -1c
.RI "id< \fBMPSCNNConvolutionDataSource\fP > \fBoutputTransform\fP"
.br
.ti -1c
.RI "id< \fBMPSCNNConvolutionDataSource\fP > \fBrecurrentOutputTransform\fP"
.br
.ti -1c
.RI "\fBMPSRNNSequenceDirection\fP \fBlayerSequenceDirection\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This depends on Metal\&.framework  The \fBMPSRNNDescriptor\fP specifies a Recursive neural network block/layer descriptor\&. 
.SH "Property Documentation"
.PP 
.SS "\- inputFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of feature channels per pixel in the input image or number of rows in the input matrix\&. 
.SS "\- inputTransform\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [retain]\fP"
Transform the input of the RNN layer before any other operations\&. For an image based RNN this perfoms a convolution operation as specified by the data source and for a matrix based RNN it performs a matrix multiply and an affine transform - in this case the kernelWidth and kernelHeight must be equal to one in order for it to define a matrix\&. This applies across all the other data sources defined in the different RNN descriptors\&. If the normal operation of the RNN layer is: (yt, ht, ct) = f(xt,ht-1,ct-1), then this transformation replaces 'xt' with 'W*xt + b'\&. If nil, no operation is performed\&. Defaults to nil\&. 
.SS "\- layerSequenceDirection\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
When the layer specified with this descriptor is used to process a sequence of inputs by calling 
.PP
\fBSee also:\fP
.RS 4
encodeBidirectionalSequenceToCommandBuffer then this parameter defines in which direction the sequence is processed\&. The operation of the layer is: (yt, ht, ct) = f(xt,ht-1,ct-1) for \fBMPSRNNSequenceDirectionForward\fP and (yt, ht, ct) = f(xt,ht+1,ct+1) for \fBMPSRNNSequenceDirectionBackward\fP, where xt is the output of the previous layer that encodes in the same direction as this layer, (or the input image or matrix if this is the first layer in stack with this direction)\&. 
.PP
\fBMPSRNNImageInferenceLayer\fP and 
.PP
\fBMPSRNNMatrixInferenceLayer\fP\&. 
.RE
.PP

.SS "\- outputFeatureChannels\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of feature channels per pixel in the destination image or number of rows in the destination matrix\&. 
.SS "\- outputTransform\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [retain]\fP"
Transform the output values on the destination of the RNN layer after all other operations\&. For a image based RNN this perfoms a convolution operation as specified by the data source and for a matrix based RNN it performs a matrix multiply and an affine transform\&. If the normal operation of the RNN layer is: (yt, ht, ct) = f(xt,ht-1,ct-1), then this transformation replaces 'yt' with 'W*yt + b'\&. If nil, no operation is performed on the output values\&. Defaults to nil\&. 
.SS "\- recurrentOutputTransform\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [retain]\fP"
Transform the output values on the destination of the RNN layer after all other operations\&. For a image based RNN this perfoms a convolution operation as specified by the data source and for a matrix based RNN it performs a matrix multiply and an affine transform\&. If the normal operation of the RNN layer is: (yt, ht, ct) = f(xt,ht-1,ct-1), then this transformation replaces 'ht' with 'W*ht + b'\&. If nil, no operation is performed on the output values\&. Defaults to nil\&. 
.SS "\- useFloat32Weights\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
If YES, then \fBMPSRNNMatrixInferenceLayer\fP uses 32-bit floating point numbers internally for weights when computing matrix transformations\&. If NO, then 16-bit, half precision floating point numbers are used\&. Currently \fBMPSRNNImageInferenceLayer\fP ignores this property and the convolution operations always convert FP32 weights into FP16 for better performance\&. Defaults to NO\&. 
.SS "\- useLayerInputUnitTransformMode\fC [read]\fP, \fC [write]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
if YES then use identity transformation for all weights (W, Wr, Wi, Wf, Wo, Wc) affecting input x_j in this layer, even if said weights are specified as nil\&. For example 'W_ij * x_j' is replaced by 'x_j' in formulae defined in \fBMPSBasicRNNDescriptor\fP, but not in \fBinputTransform\fP\&. Defaults to NO\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
