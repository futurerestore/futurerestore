.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Speech 3"
.TH Speech 3 "2017-07-07" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Mac::Speech \- Provide interface to PlainTalk (Speech Manager)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Mac::Speech;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Access to Inside Macintosh is essential for proper use of these functions.
Explanations of terms, processes and procedures are provided there.
Any attempt to use these functions without guidance can cause severe errors in 
your machine, including corruption of data. \fBYou have been warned.\fR
.SS "Variables"
.IX Subsection "Variables"
.ie n .IP "%Voice" 4
.el .IP "\f(CW%Voice\fR" 4
.IX Item "%Voice"
The \f(CW%Voice\fR hash will return the index to the first voice whose name
matches the given text.
.SS "Constants"
.IX Subsection "Constants"
.IP "kTextToSpeechSynthType" 4
.IX Item "kTextToSpeechSynthType"
.PD 0
.IP "kTextToSpeechVoiceType" 4
.IX Item "kTextToSpeechVoiceType"
.IP "kTextToSpeechVoiceFileType" 4
.IX Item "kTextToSpeechVoiceFileType"
.IP "kTextToSpeechVoiceBundleType" 4
.IX Item "kTextToSpeechVoiceBundleType"
.PD
Speech Types.
.IP "kNoEndingProsody" 4
.IX Item "kNoEndingProsody"
.PD 0
.IP "kNoSpeechInterrupt" 4
.IX Item "kNoSpeechInterrupt"
.IP "kPreflightThenPause" 4
.IX Item "kPreflightThenPause"
.PD
Synthesizer flags.
.IP "kImmediate" 4
.IX Item "kImmediate"
.PD 0
.IP "kEndOfWord" 4
.IX Item "kEndOfWord"
.IP "kEndOfSentence" 4
.IX Item "kEndOfSentence"
.PD
Where to stop.
.IP "kNeuter" 4
.IX Item "kNeuter"
.PD 0
.IP "kMale" 4
.IX Item "kMale"
.IP "kFemale" 4
.IX Item "kFemale"
.PD
Genders.
.SS "Types"
.IX Subsection "Types"
.IP "VoiceDescription" 4
.IX Item "VoiceDescription"
Voice Description Record.
.Sp
.Vb 10
\&        long        length              size of structure\-\-set by application
\&        VoiceSpec   voice               voice synthesizer and ID info
\&        long        version             version number of voice
\&        Str63       name                name of voice
\&        Str255      comment             text information about voice
\&        short       gender              neuter, male, or female
\&        short       age                 approximate age in years
\&        short       script              script code of text voice can process
\&        short       language            language code of voice output
\&        short       region              region code of voice output
.Ve
.IP "VoiceSpec" 4
.IX Item "VoiceSpec"
Voice Specification Record.
.Sp
.Vb 2
\&        OSType      creator             ID of required synthesizer
\&        OSType      id                  ID of voice on the synthesizer
.Ve
.SS "Functions"
.IX Subsection "Functions"
.IP "SpeechManagerVersion" 4
.IX Item "SpeechManagerVersion"
.PD 0
.IP "CountVoices" 4
.IX Item "CountVoices"
.IP "GetIndVoice \s-1INDEX \s0" 4
.IX Item "GetIndVoice INDEX "
.IP "GetVoiceDescription \s-1VOICE \s0" 4
.IX Item "GetVoiceDescription VOICE "
.IP "NewSpeechChannel \s-1VOICE \s0" 4
.IX Item "NewSpeechChannel VOICE "
.IP "DisposeSpeechChannel \s-1CHAN \s0" 4
.IX Item "DisposeSpeechChannel CHAN "
.IP "SpeakString S" 4
.IX Item "SpeakString S"
.IP "SpeakText \s-1CHAN, TEXT \s0" 4
.IX Item "SpeakText CHAN, TEXT "
.IP "SpeakBuffer \s-1CHAN, TEXT, CONTROLFLAGS \s0" 4
.IX Item "SpeakBuffer CHAN, TEXT, CONTROLFLAGS "
.IP "StopSpeech \s-1CHAN \s0" 4
.IX Item "StopSpeech CHAN "
.IP "StopSpeechAt \s-1CHAN, WHERETOSTOP \s0" 4
.IX Item "StopSpeechAt CHAN, WHERETOSTOP "
.IP "PauseSpeechAt \s-1CHAN, WHERETOPAUSE \s0" 4
.IX Item "PauseSpeechAt CHAN, WHERETOPAUSE "
.IP "ContinueSpeech \s-1CHAN \s0" 4
.IX Item "ContinueSpeech CHAN "
.IP "SpeechBusy" 4
.IX Item "SpeechBusy"
.IP "SpeechBusySystemWide" 4
.IX Item "SpeechBusySystemWide"
.IP "SetSpeechRate \s-1CHAN, RATE \s0" 4
.IX Item "SetSpeechRate CHAN, RATE "
.IP "GetSpeechRate \s-1CHAN \s0" 4
.IX Item "GetSpeechRate CHAN "
.IP "SetSpeechPitch \s-1CHAN, PITCH \s0" 4
.IX Item "SetSpeechPitch CHAN, PITCH "
.IP "GetSpeechPitch \s-1CHAN \s0" 4
.IX Item "GetSpeechPitch CHAN "
.IP "TextToPhonemes \s-1CHAN, TEXT\s0" 4
.IX Item "TextToPhonemes CHAN, TEXT"
.IP "SpeechToFile \s-1CHAN, PATH\s0" 4
.IX Item "SpeechToFile CHAN, PATH"
.PD
Set speech channel \s-1CHAN\s0 to output to file \s-1PATH.\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Matthias Ulrich Neeracher <neeracher@mac.com>.
Currently maintained by Chris Nandor <pudge@pobox.com>.
