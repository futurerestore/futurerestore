.TH "MPSMatrixCopy" 3 "Sun Jul 2 2017" "Version MetalPerformanceShaders-84.1" "MetalPerformanceShaders.framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MPSMatrixCopy
.SH SYNOPSIS
.br
.PP
.PP
\fC#import <MPSMatrixCombination\&.h>\fP
.PP
Inherits \fBMPSKernel\fP\&.
.SS "Instance Methods"

.in +1c
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:\fP"
.br
.ti -1c
.RI "(nonnull instancetype) \- \fBinitWithDevice:copyRows:copyColumns:sourcesAreTransposed:destinationsAreTransposed:\fP"
.br
.ti -1c
.RI "(void) \- \fBencodeToCommandBuffer:copyDescriptor:\fP"
.br
.ti -1c
.RI "(nullable instancetype) \- \fBinitWithCoder:device:\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "NSUInteger \fBcopyRows\fP"
.br
.ti -1c
.RI "NSUInteger \fBcopyColumns\fP"
.br
.ti -1c
.RI "BOOL \fBsourcesAreTransposed\fP"
.br
.ti -1c
.RI "BOOL \fBdestinationsAreTransposed\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Method Documentation"
.PP 
.SS "\- (void) encodeToCommandBuffer: (nonnull id< MTLCommandBuffer >) cmdBuf(\fBMPSMatrixCopyDescriptor\fP *__nonnull) copyDescriptor"
Encode the copy operations to the command buffer 
.SS "\- (nullable instancetype) \fBinitWithCoder:\fP (NSCoder *__nonnull) aDecoder(nonnull id< MTLDevice >) device"
\fBNSSecureCoding\fP compatability  See \fBMPSKernel::initWithCoder\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIaDecoder\fP The NSCoder subclass with your serialized MPSMatrixLookUpAndCopy 
.br
\fIdevice\fP The MTLDevice on which to make the MPSMatrixLookUpAndCopy 
.RE
.PP
\fBReturns:\fP
.RS 4
A new MPSMatrixLookUpAndCopy object, or nil if failure\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSKernel\fP\&.
.SS "\- (nonnull instancetype) initWithDevice: (nonnull id< MTLDevice >) device"
Standard init with default properties per filter type 
.PP
\fBParameters:\fP
.RS 4
\fIdevice\fP The device that the filter will be used on\&. May not be NULL\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
a pointer to the newly initialized object\&. This will fail, returning nil if the device is not supported\&. Devices must be MTLFeatureSet_iOS_GPUFamily2_v1 or later\&. 
.RE
.PP

.PP
Reimplemented from \fBMPSKernel\fP\&.
.SS "\- (nonnull instancetype) \fBinitWithDevice:\fP (nonnull id< MTLDevice >) device(NSUInteger) copyRows(NSUInteger) copyColumns(BOOL) sourcesAreTransposed(BOOL) destinationsAreTransposed"
Initialize a copy operator 
.PP
\fBParameters:\fP
.RS 4
\fIcopyRows\fP The number of rows to copy for each copy operation 
.br
\fIcopyColumns\fP The number of matrix columns to copy in each copy operation 
.br
\fIsourcesAreTransposed\fP If YES, the sources are in row major storage order 
.br
\fIdestinationsAreTransposed\fP If YES, the destinations are in row major storage order 
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "\- (NSUInteger) copyColumns\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of columns to copy for each copy operation 
.SS "\- (NSUInteger) copyRows\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
The number of rows to copy for each copy operation 
.SS "\- (BOOL) destinationsAreTransposed\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
If YES, the destinations are in row major storage order 
.SS "\- (BOOL) sourcesAreTransposed\fC [read]\fP, \fC [nonatomic]\fP, \fC [assign]\fP"
If YES, the sources are in row major storage order 

.SH "Author"
.PP 
Generated automatically by Doxygen for MetalPerformanceShaders\&.framework from the source code\&.
